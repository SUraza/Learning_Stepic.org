Задание:
Эта задача является дополнительной, то есть ее решение не принесет вам баллы.
Задача сложнее остальных задач из этого раздела, и идея ее решения выходит за рамки простого понимания регулярных выражений как средства задания шаблона строки.
Мы решили включить данную задачу в урок, чтобы показать, что регулярным выражением можно проверить не только "внешний вид" строки, но и заложенный в ней смысл.


Вам дана последовательность строк.
Выведите строки, содержащие двоичную запись числа, кратного 3.

Двоичной записью числа называется его запись в двоичной системе счисления.

Примечание 2:
Данная задача очень просто может быть решена приведением строки к целому числу и проверке остатка от деления на три, но мы все же предлагаем вам решить ее, не используя приведение к числу.


Решение №1:
import re
import sys

for line in sys.stdin:
    if re.match(r'^(1(01*0)*1|0)*$',line.rstrip()): 
        print(line.rstrip())

Решение №2:
import re
import sys

pattern = "^(0|(1(01*0)*1))*$"
pattern = re.compile(pattern)
for line in sys.stdin:
    line = line.rstrip()
    if pattern.match(line):
        print(line)
        
Решение №3:
import sys, re

for line in sys.stdin:
    line = line.rstrip()
    pattern = r"(1(01*0)*1|0)*"
    if re.fullmatch(pattern,line):
        print(line)

Решение №4:
import sys
import re

for line in sys.stdin:
    if re.match(r"(1(01*0)*1|0)+\n", line):
        print(line.rstrip())

Решение №5:
import sys, re
[print(line, end='') for line in sys.stdin if re.fullmatch(r'(0+|1(01*0)*1)+\s', line)]

Решение №6:
import sys
import re

for line in sys.stdin:
    line = line.rstrip()
    if re.match(r'^[01]*$', line):
        a = len(re.findall(r'1', re.sub(r'([01])([01])', r'\1', line + '0')))
        b = len(re.findall(r'1', re.sub(r'([01])([01])', r'\2', line + '0')))
        if not abs(a - b) % 3:
            print(line)

Решение №7:
import re
import sys

pattern = r"^((1(01*0)*1|0)*)$"


for line in sys.stdin:
    try:
        test_line = line.rstrip()
        f = re.findall(pattern, test_line)
        if f is not [] and f[0][0] == test_line:
            print(f[0][0])
    except IndexError:
        pass
