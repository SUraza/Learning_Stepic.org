>>> 
>>> nudge = 1
>>> wink = 2
>>> A, B = nudge, wink
>>> A, B
(1, 2)
>>> [C, D] = [nudge, wink]
>>> C, D
(1, 2)
>>> 
>>> 
>>> nudge = 1
>>> wink = 2
>>> nudge, wink = wink, nudge
>>> nudge, wink
(2, 1)
>>> 
>>> 
>>> [a, b, c] = (1, 2, 3)
>>> a, c
(1, 3)
>>> a,c
(1, 3)
>>> (a, b, c) = "ABC"
>>> a, c
('A', 'C')
>>> a, b
('A', 'B')
>>> 
>>> 
>>> string = 'SPAM'
>>> a, s, d, f = string
>>> a, f
('S', 'M')
>>> s, d
('P', 'A')
>>> 
>>> 
>>> a, b, c = string[0], string[1], string[2]
>>> a, b, c
('S', 'P', 'A')
>>> a, b, c = string[0], string[1], string[2:]
>>> a, b, c
('S', 'P', 'AM')
>>> a, b, c = list(string[:2]) + [string[2:]]
>>> a, b, c
('S', 'P', 'AM')
>>> a, b = string[:2]
>>> c = string[:2]
>>> a, b, c
('S', 'P', 'SP')
>>> c = string[2:]
>>> a, b, c
('S', 'P', 'AM')
>>> (a, b), c = string[:2], string[2:]
>>> a, b, c
('S', 'P', 'AM')
>>> 
>>> 
>>> ((a, b), c) = ('SP', 'AM')
>>> a, b, c
('S', 'P', 'AM')
>>> 
>>> 
>>> red, green, blue = range(3)
>>> red, blue
(0, 2)
>>> red, green, blue
(0, 1, 2)
>>> 
>>> renge(3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'renge' is not defined
>>> range(3)
range(0, 3)
>>> list(range(3))
[0, 1, 2]
>>> 
>>> L = [1, 2, 3, 4]
>>> while L:
...     front, L = L[0], L[1:] 
...     print(front, L)
... 
1 [2, 3, 4]
2 [3, 4]
3 [4]
4 []
>>> 
>>> 
>>> seq = [1, 2, 3, 4]
>>> a, b, c, d = seq
>>> print(a, b, c, d)
1 2 3 4
>>> a, b, = seq
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: too many values to unpack (expected 2)
>>> a, b = seq
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: too many values to unpack (expected 2)
>>> a, *b = seq
>>> a
1
>>> b
[2, 3, 4]
>>> *a, b = seq
>>> a
[1, 2, 3]
>>> b
4
>>> a, *b, c = seq
>>> a, b, c
(1, [2, 3], 4)
>>> a, b, *c = seq
>>> a, b, c
(1, 2, [3, 4])
>>> a, *b = 'spam'
>>> a, b
('s', ['p', 'a', 'm'])
>>> a, *b, c = 'spam'
>>> a, b, c
('s', ['p', 'a'], 'm')
>>> 
>>> S = 'spamham'
>>> a, b
('s', ['p', 'a'])
>>> S[0], S[1:]
('s', 'pamham')
>>> S[0], S[1:4], S[4:]
('s', 'pam', 'ham')
>>> 
>>> L = [1, 2, 3, 4]
>>> while L:
...     front, *L = L
...     print(front, L)
... 
1 [2, 3, 4]
2 [3, 4]
3 [4]
4 []
>>> 
>>> 
>>> seq
[1, 2, 3, 4]
>>> a, b, c, *d = seq
>>> print(a, b, c, d)
1 2 3 [4]
>>> 
>>> a, b, c, d, *e = seq
>>> print(a, b, c, d, e)
1 2 3 4 []
>>> 
>>> a, *b, c, *d = seq
  File "<stdin>", line 1
SyntaxError: two starred expressions in assignment
>>> a, b = seq
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: too many values to unpack (expected 2)
>>> *a = seq
  File "<stdin>", line 1
SyntaxError: starred assignment target must be in a list or tuple
>>> *a, = seq
>>> a
[1, 2, 3, 4]
>>> 
>>> 
>>> seq
[1, 2, 3, 4]
>>> a, *b = seq
>>> a, b
(1, [2, 3, 4])
>>> a, b = seq[0], seq[1:]
>>> a, b
(1, [2, 3, 4])
>>> *a, b = seq
>>> a, b
([1, 2, 3], 4)
>>> a, b = seq[:-1], seq[-1]
>>> a, b
([1, 2, 3], 4)
>>> 
>>> 
>>> for (a, b, c) in [(1, 2, 3), (4, 5, 6)]:
...     print(a, b, c)
... 
1 2 3
4 5 6
>>> for (a, b, c) in [(1, 2, 3), (4, 5, 6), (7, 8, 9)]:
...     print(a, b, c)
... 
1 2 3
4 5 6
7 8 9

>>> for all in [(1, 2, 3, 4), (5, 6, 7, 8)]:
...     a, b, c = all[0], all[1:3], all[3]
... 
>>> 
>>> for all in [(1, 2, 3, 4), (5, 6, 7, 8)]:
...     a, b, c = all[0], all[1:3], all[3]
...     print(a, b, c)
... 
1 (2, 3) 4
5 (6, 7) 8
>>> 
>>> 
>>> a = b = c = 'spam'
>>> a, b, c
('spam', 'spam', 'spam')
>>> c = 'spam'
>>> b = c
>>> a = b
>>> a, b, c
('spam', 'spam', 'spam')
>>> 
>>> 
>>> a = b = 0
>>> b = b + 1
>>> a, b
(0, 1)
>>> a, b
(0, 1)
>>> 
>>> a = b = []
>>> b.append(42)
>>> a, b
([42], [42])
>>> 
>>> a = []
>>> b = []
>>> b.append(42)
>>> a, b
([], [42])
>>> 
>>> 
>>> 
>>> x = 1
>>> x = x + 1
>>> x
2
>>> x += 1
>>> x
3
>>> S = 'SPAM'
>>> S += 'SPAM'
>>> S
'SPAMSPAM'
>>> 
>>> 
>>> L = [1, 2]
>>> L = L +[3]
>>> L
[1, 2, 3]
>>> L.append(4)
>>> L
[1, 2, 3, 4]
>>> 
>>> L = L + [5, 6]
>>> L
[1, 2, 3, 4, 5, 6]
>>> L.extend([7, 8])
>>> L
[1, 2, 3, 4, 5, 6, 7, 8]
>>> 
>>> L[len(L):] = [9, 10, 11, 12]
>>> L
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
>>> 
>>> L += [13, 14, 15]
>>> L
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
>>> 
>>> 
>>> L = [1, 2]
>>> M = L
>>> L = L + [3, 4]
>>> L, M 
([1, 2, 3, 4], [1, 2])
>>> 
>>> L = [1, 2]
>>> M = L
>>> L += [3, 4]
>>> L, M
([1, 2, 3, 4], [1, 2, 3, 4])
>>> 
>>> 
>>> 
>>> 
>>> x = 'spam'
>>> y = 99
>>> z = ['eggs']
>>> print(x, y, z)
spam 99 ['eggs']
>>> 
>>> print(x, y, z, sep=)
  File "<stdin>", line 1
    print(x, y, z, sep=)
                       ^
SyntaxError: invalid syntax
>>> print(x, y, z, sep='')
spam99['eggs']
>>> 
>>> print(x, y, z, sep=', ')
spam, 99, ['eggs']
>>> 
>>> print(x, y, z, end='')
spam 99 ['eggs']>>> 
>>> 
>>> print(x, y, z, end=''); print(x, y, z)
spam 99 ['eggs']spam 99 ['eggs']
>>> 
>>> print(x, y, z, end='...\n')
spam 99 ['eggs']...
>>> print(x, y, z, sep='...', end='!\n')
spam...99...['eggs']!
>>> print(x, y, z, end='!\n', sep='...')
spam...99...['eggs']!
>>> 
>>> 
>>> print(x, y, z, sep='...', file=open('data.txt', 'w'))
>>> print(x, y, z)
spam 99 ['eggs']
>>> 
>>> print(open('data.txt').read())
spam...99...['eggs']

>>> 
>>> 
>>> text = '%s: %-.4f, %05d' % ('Result', 3.14159, 42)
>>> print(text)
Result: 3.1416, 00042
>>> print('%s: %-.4f, %05d' % ('Result', 3.14159, 42))
Result: 3.1416, 00042
>>> 
>>> 
>>> import sys
>>> sys.stdout.writ
sys.stdout.writable(    sys.stdout.write(       sys.stdout.writelines(
>>> sys.stdout.write('Hello world!\n')
Hello world!
13
>>> 
>>> import sys
>>> temp = sys.stdout
>>> sys
sys
>>> sys.stdout = open('log.txt', 'a')
>>> print('spam')
>>> print(1, 2, 3)
>>> print(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
>>> sys.stdout.close()
>>> sys.stdout = temp
>>> 
>>> print('back here')
back here
>>> print(open('log.txt').read())
spam
1 2 3
1 2 3 4 5 6 7 8 9 10

>>> log = open('log.txt', 'a')
>>> print(x, y, z, file=log)
>>> 
>>> log = open('log.txt', 'a')
>>> 
>>> 
>>> 
>>> X = 1; Y = 2
>>> print(X, Y)
1 2
>>> import sys
>>> sys.stdout.write(str(X) + '' + str(Y) + '\n')
12
3
>>> sys.stdout.write(str(X) + ' ' + str(Y) + '\n')
1 2
4
>>> 
>>> print(X, Y, file=open('temp1', 'w'))
>>> open('temp2', 'w').write(str(X) + ' ' + str(Y) + '\n')
4
>>> 
>>> print(open('temp1', 'rb').read())
b'1 2\n'
>>> print(open('temp2', 'rb').read())
b'1 2\n'
>>>     


