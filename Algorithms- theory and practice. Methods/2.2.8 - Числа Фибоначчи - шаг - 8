Задание:
Даны целые числа 1≤n≤1018 и 2≤m≤105, необходимо найти остаток от деления n-го числа Фибоначчи на m.

Решение №1:
n,m=map(int,input().split())
o,i=[0,1],2
while not (o[i-2]==0 and o[i-1]==1) or i<=2:
	o.append((o[i-2]+o[i-1])%m)
	i+=1
print(o[n%(i-2)])

Решение №2:
def d_f(n, m):
        seq = [0, 1]
        for i in (0 if seq[-1] == 0 and (seq[i - 1] + seq[i - 2]) % m == 1
                  else seq[i - 1] + seq[i - 2]
                  for i in range(2, n+3)):
            if i:
                seq += [i % m]
                continue
            break
        return seq[n % (len(seq)-1)]
    
if __name__ == '__main__':
    print(d_f(*map(int, input().split())))

Решение №3:
n, MOD = map(int, input().split())

def mul(A,B):
    return [ [ sum(A[r][i]*B[i][c] for i in range(2))%MOD for c in range(2) ] for r in range(2) ]

def exp(A,n):
    if n==0: return [ [1,0], [0,1] ]
    C = exp(A,n//2)
    C = mul(C,C)
    return mul(A,C) if n%2 else C

print( exp( [ [0,1], [1,1] ], n )[0][1] ) 

Решение №4:
n, m = map(int, input().split())
k=0
S = [0,1]
for i in range(2,6*n):
  S.append((S[i-1]+S[i-2])%m)
  k = k+1
  if (S[i]==1) and (S[i-1]==0):
    break
print(S[(n%k)])

Решение №5:
def fib_mod(n, m):
    fib_list_mod = [0, 1]

    for i in range(2, n + 1):
        fib_list_mod.append((fib_list_mod[i - 1] + fib_list_mod[i - 2]) % m)

        if (fib_list_mod[i - 1] == 0) and (fib_list_mod[i] == 1):
            fib_list_mod = fib_list_mod[:-2]
            break

    return fib_list_mod[n % len(fib_list_mod)]


def main():
    n, m = map(int, input().split())
    print(fib_mod(n, m))


if __name__ == "__main__":
    main()
    
Решение №6:
def fib_mod(n, m):
    a, b = 0, 1
    p = [a]
    for i in range(n):
        a, b = b, (a + b) % m        
        if (a, b) == (0, 1):
            break
        p.append(a)
    return p[n % len(p)]

def main():
    n, m = map(int, input().split())
    print(fib_mod(n, m))
    
Решение №7:    
def fib_mod(n, m):
    f = [0, 1, 1]
    prev, cur = 1, 1
    while prev != 0 or cur != 1:
        prev, cur = cur, (cur + prev) % m
        f.append(cur)
    return f[n%(len(f)-2)]

def main():
    n, m = map(int, input().split())
    print(fib_mod(n, m))


if __name__ == "__main__":
    main()    
